package co.aa8y.euler

/**
 * Problem 2: Even Fibonacci numbers
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By
 * starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 */
object Problem0002 {
  def solution(max: Int = 4000000): Int = {
    var sum = 0
    var prev = 0
    var curr = 1
    var next = prev + curr

    while (next <= max) {
      if (next % 2 == 0) sum += next

      next = prev + curr
      prev = curr
      curr = next
    }

    sum
  }
}
