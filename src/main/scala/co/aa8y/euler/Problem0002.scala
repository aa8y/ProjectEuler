package co.aa8y.euler

/**
 * Problem 2: Even Fibonacci numbers
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By
 * starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 */
object Problem0002 {
  def solution(max: Int = 4000000): Long = {
    var fibo = Seq(1, 2)

    def getNext(prev: Int, curr: Int): Int = fibo(prev) + fibo(curr)
    var prev = 0
    var curr = 1
    var next = getNext(prev, curr)

    while(isValid(next)(max)) {
      fibo = fibo :+ next
      prev = prev + 1
      curr = curr + 1
      next = getNext(prev, curr)
    }

    fibo.filter(_ % 2 == 0).sum
  }

  def isValid(n: Int)(max: Int): Boolean = n <= max
}
